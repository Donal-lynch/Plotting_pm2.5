library(swirl)
swirl()
hea (airquality)
head (airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = 'red', pch = 8, main = 'Big Apple, Data')
xyplot(Ozone~Wind, data = airquality, col = 'red', pch = 8, main = 'Big Apple Data')
xyplot(Ozone~Wind, data = airquality, pch = 8, col = 'red', main = 'Big Apple Data')
xyplot(Ozone~Wind |as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month instead of Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p<- xyplot(Ozone~Wind,data=airquality)
p
names(p)
names[myfull]
names(myfull)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v3
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c('red', 'blue'))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c('red', 'blue'))
p1(2)
p1(6)
0xcc
p2<- colorRampPalette(c('red', 'yellow'))
p2(2)
p2(10)
showMe(p1(20))
myedit('showMe.R')
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<- colorRampPalette(c('blue', 'green'), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0,.5,.5))
plot(x, y, pch = 19, col = rgb(0,.5,.5, 0.3))
cols<- brewer.pal(3, 'BuGn')
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20)
)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth'))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = 'boxplot')
qplot(drv, hwy, data = mpg, geom = 'boxplot', color = manufacturer)
qplot(hwy, mpg, fill = drv)
qplot(hwy, mpg)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv, binwidth = 2)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c('point', 'smooth'), facets = .~drv)
g<- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = lm)
g+geom_point()+geom_smooth(method = 'lm')
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = 'pink', size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+ labs(title = 'Swirl Rules!') + labs(x = 'Displacement', y = 'Hwy Mileage')
g+geom_point(aes(color = drv), size = 2, alpha = 0.5) + geom_smooth (size = 4, linetype = 3, method = 'lm', se = FALSE)
g + theme_bw(base_family = 'Times')
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = 'l', ylim = c(-3,3))
g <- ggplot(testdata, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line()+y_lim(-3,3)
g + geom_line()+ylim(-3,3)
g + geom_line()+coord_cartesian(ylim = c(-3, 3))
g<- ggplot(mpg, aes(x = =displ, y = hwy, color = factor(year)))
g<- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black')
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black')+labs(x = 'Displacement', y = 'Highway Mileage', title = 'Swirl Rules!')
quit()
exit()
exit
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18749/30)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = 'density')
qplot(price, data = diamonds, geom = 'density', color = cut
)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = 'lm'))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = 'lm'))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = 'lm')
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = 'lm')
g<- ggplot(diamonds, aes(dept, price))
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <-quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha = 1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha = 1/3)+facet_grid(cut~car2)+geom_smooth(method = 'lm', size = 3, color = 'pink')
ggplot(diamonds, aes(carrot, price))+geom_boxplot()+facet_grid(.~cut)
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
text('Hello, World!')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight, text('hiya'))
?text
?lines
?points
?panel.abline
ob <- xyplot(weight ~ Time | Diet, BodyWeight)
class(ob)
?trellis.par.set()
?par
?splom
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g+geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?which.max
?less
?less
??less
?strsplit
?make.names
1304287*28*8
1304287*28*8/1000
1304287*28*8/1000/1000
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
median (em02$Emissions)
median (em05$Emissions)
NEI%>%dim
SCC%>%dim
SCC%>%names()
head(SCC)
NEI%>%head
?colSums
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
tapply
?tapply
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
source('~/Coursera/Johns Hopkins Data Science Specializition/Exploratory data analysis/Week4/Code/plot1.R', echo=TRUE)
?grDevices
use library(help = "grDevices"
use library(help = "grDevices")
library(help = "grDevices")
devices()
plot(cars)
dev.off
dev.off()
plot(cars)
